datasource:
  None:
    userdata_raw: |
      #cloud-config
      preserve_hostname: true
      bootcmd:
        - [ cloud-init-per, instance, enabledisplayservice, systemctl, enable, displayservice.service ]
        - [ cloud-init-per, always, startdisplayservice, systemctl, start, displayservice.service ]
      mounts:
        - [ /dev/md/0, /raid, auto, "defaults,noatime,nofail", "0", "2" ]
      runcmd:
        - [ cloud-init-per, instance, enabledisplayservice, systemctl, enable, displayservice.service ]
        - [ cloud-init-per, always, startdisplayservice, systemctl, start, displayservice.service ]
        - [ cloud-init-per, instance, enablepoweroff, systemctl, enable, poweroff.service ]
        - [ cloud-init-per, instance, enablereboot, systemctl, enable, reboot.service ]
        - [ cloud-init-per, instance, enablesleeping, systemctl, enable, sleeping.service ]
        - [ cloud-init-per, instance, bootup, bash, /opt/tinybox/service/bootup.sh ]
        - [ cloud-init-per, instance, hostname, hostnamectl, hostname, tinybox ]
        - [ cloud-init-per, instance, adduser, bash, /opt/tinybox/setup/adduser.sh ]
        - [ cloud-init-per, instance, update, bash, /opt/tinybox/setup/update.sh ]
        - [ cloud-init-per, instance, raidsetup, bash, /opt/tinybox/setup/raidsetup.sh ]
        - [ cloud-init-per, instance, driverinstall, bash, /opt/tinybox/setup/driverinstall.sh ]
        - [ cloud-init-per, instance, initialpackage, bash, /opt/tinybox/setup/initialpackage.sh ]
        - [ cloud-init-per, always, correctperms, bash, /opt/tinybox/setup/correctperms.sh ]
        - [ cloud-init-per, instance, enablefirstsetup, systemctl, enable, firstsetup.service ]
        - [ cloud-init-per, instance, ensuredspackage, bash, /opt/tinybox/setup/ensuredspackage.sh ]
        - [ cloud-init-per, instance, reboot, bash, /opt/tinybox/service/reboot.sh ]
      power_state:
        delay: now
        mode: reboot
        message: Rebooting after setup
        condition: true
